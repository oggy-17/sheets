#Wordpress Sheet

#For increasing memory limit
define('WP_MEMORY_LIMIT', '64M');

#Incase if the option of 'Add New Plugins' Dissappear
define('DISALLOW_FILE_MODS',false);

#For setting Home and Site URL
define( 'WP_HOME', 'http://example.com' );
define( 'WP_SITEURL', 'http://example.com' );

#When  ask for SFTP Credentials while installing any plugin
define( 'FS_METHOD', 'direct' );

#Changing permission of directory and file
define( 'FS_CHMOD_DIR', 0775);
define( 'FS_CHMOD_FILE', 0664 );

#Wordpress asking for Enabling Cookies in the browser
define('COOKIE_DOMAIN', $_SERVER['HTTP_HOST'] );
#OR
define('ADMIN_COOKIE_PATH', '/');
define('COOKIE_DOMAIN', '');
define('COOKIEPATH', '');
define('SITECOOKIEPATH', '');

#For setting memcache/redis cache key salt
define ('WP_CACHE_KEY_SALT', 'domain.com');

#If error shows "Sorry, this file type is not supported for security reasons?" while uploading fonts
define('ALLOW_UNFILTERED_UPLOADS', true);

#For disabling cron of Wordpress
define('DISABLE_WP_CRON', true);
#Add this cron in Cron Management after disabling it fromm wp-config.php
*/5 * * * * wget -q -O - https://your-domain.com/wp-cron.php?doing_wp_cron

# Use X-Forwarded-For HTTP Header to Get Visitor's Real IP Address
if ( isset( $_SERVER['HTTP_X_FORWARDED_FOR'] ) ) {
    $http_x_headers = explode( ',', $_SERVER['HTTP_X_FORWARDED_FOR'] );

    $_SERVER['REMOTE_ADDR'] = $http_x_headers[0];
}

$_SERVER['REMOTE_ADDR'] = $_SERVER['HTTP_X_REAL_IP']; 

#For Search and Replace in Database
wp search-replace olddomain newdomain --all-tables --dry-run

#For Search and Replace from http to https in Database
wp search-replace http://olddomain https://newdomain --all-tables --dry-run

#For Search and Replace in all files
grep -rl "olddomain"| xargs sed -i 's#olddomain#newdomain#g'

#For viewing list of wp users
wp user list

#For creating wp-admin testing user credentials
wp user create test test@example.com --role=administrator
wp user create bob bob@example.com --role=author

#For deleting test user
wp user delete test --reassign=567

#For Downloading Wordpress
wp core download

#For checking wordpress crons
wp cron event list

#For clearing wordpress cache
wp cache flush --allow-root
rm -rf ./wp-content/cache/*

#For viewing plugin list
wp plugin list 

#For activating plugin
wp plugin activate plugin-name --allow-root
#For deactivating plugin
wp plugin deactivate plugin-name --allow-root
#For deactivating all plugins
wp plugin deactivate --all --allow-root

#If wordpress have some non-active plugins and we wish to save the list of active plugin only
wp plugin list --status=active --format=csv  --allow-root | awk -F, '{print $1}'   >  plugin.txt
#Reactivate all of those specific plugin by using this
wp plugin activate $(<plugin.txt) --allow-root

#.htaccess Rules

#Wordpress default .htaccess rule
# BEGIN WordPress
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
# END WordPress


# Block WordPress xmlrpc.php requests
<Files xmlrpc.php>
order deny,allow
deny from all
allow from ipaddress
</Files>

#Blocking code.php requests
<Files code.php>
order deny,allow
deny from all
</Files>

#Blocking spamming bots request
RewriteEngine On
RewriteCond %{HTTP_USER_AGENT} ^.*(SCspider|Textbot|s2bot|MJ12bot|YandexBot|SemrushBot|AspiegelBot|BLEXBot|webmeup-crawler|oBot|Semrush|SiteExplorer|BaiDuSpider).*$ [NC]
RewriteRule .* - [F,L]


#Blocking specific IP's
<Limit GET POST>
order allow,deny
deny from ipaddress
deny from ipaddress
deny from ipaddress
deny from ipaddress
deny from ipaddress
allow from all
</Limit>

<RequireAll>
    Require all granted
    Require not ip 111.111.111.111
    Require not ip 222.222.222.222
    Require not ip 123.123.123.123
</RequireAll>

#For changing Files and Foldr Permission
find -type d -exec chmod 775 {} ';'
find -type f -exec chmod 664 {} ';'

#Searching for single plugin in all applications on server
for i in $(find /home/master/applications/*/public_html/wp-content/plugins/ -maxdepth 1 -type d | grep "<plugin-name>"| cut -d "/" -f5); do echo $i && cat /home/master/applications/$i/conf/server.nginx | grep server_name | grep -v Domain_alias | awk -F";" '{print $1}' ; done 2>/dev/null

#Searching for more than one plugin in applications on server
for i in $(find /home/master/applications/*/public_html/wp-content/plugins/ -maxdepth 1 -type d | grep "<plugin-name>\|<plugin-name>\|<plugin-name>"| cut -d "/" -f5); do echo $i && cat /home/master/applications/$i/conf/server.nginx | grep server_name | grep -v Domain_alias | awk -F";" '{print $1}' ; done 2>/dev/null

#WP -size limit issue 
php_admin_value[upload_max_filesize] = 200M
php_admin_value[post_max_size] = 200M

#Post-processing of the image failed
Add this to the functions.php file of the running theme:
add_filter( 'big_image_size_threshold', '__return_false' );


#Wp-Doctor:
wp package install wp-cli/doctor-command
wp doctor check --all

#Check plugins causing slowness in site:
for A in $(ls -la | awk '{print $NF}'); do echo $A && cat $A/conf/server.nginx && cat $A/logs/php-app.slow.log.1 | grep -ai 'wp-content/plugins' | cut -d " " -f1 --complement | cut -d '/' -f8 ; done


#Verify Checksum:
wp core verify-checksums

#Auto-Increement Fix, doesn't allow creation of new user or login into wp-admin from existing users:
https://www.codegrepper.com/code-examples/whatever/fix+autoincrement+wordpress+database

#Check Site URL and Home URL from CLI:
wp option get siteurl --allow-root
wp option get home --allow-root
